// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace readmypen.DataAccess.Entities
{
    public partial class AppDbContext : DbContext
    {
        public AppDbContext()
        {
        }

        public AppDbContext(DbContextOptions<AppDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbPictures> tbPictures { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbUsers> tbUsers { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<tbPictures>(entity =>
            {
                entity.HasKey(e => e.pic_Id)
                    .HasName("PK_Acce_tbUsuarios_pic_Id");

                entity.ToTable("tbPictures", "Admin");

                entity.Property(e => e.pic_PicturePath).IsRequired();

                entity.HasOne(d => d.usr)
                    .WithMany(p => p.tbPictures)
                    .HasForeignKey(d => d.usr_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Acce_tbPictures_tbUsers_usr_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.rol_Id)
                    .HasName("PK_Acce_tbRoles_rol_Id");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.rol_Description)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<tbUsers>(entity =>
            {
                entity.HasKey(e => e.usr_Id)
                    .HasName("PK_Acce_tbUsers_usr_Id");

                entity.ToTable("tbUsers", "Acce");

                entity.Property(e => e.usr_Password)
                    .IsRequired()
                    .HasMaxLength(8000);

                entity.Property(e => e.usr_Username)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.rol)
                    .WithMany(p => p.tbUsers)
                    .HasForeignKey(d => d.rol_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Acce_tbRoles_tbUsers_rol_Id");
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}